/*!
\mainpage Ћабораторна€ работа є3
\version 0.1
\author Zalesovskiy Vladislav
\date 09.04.2019

\section goal «адание дл€ Ћ– є3
Ќаследование. ѕерегрузка
÷ель работы: изучить процессы наследовани€ в объектно-ориентированном программировании, а также перегрузку функций и операторов.

\subsection task »ндивидуальное задание. ¬ариант 6
ѕерсонаж некоторой игры имеет некоторый уровень развити€. “акже
важными показател€ми €вл€ютс€ общее количество опыта который нужно
набрать до следующего уровн€ и набранный опыт на текущем уровне. —
каждым уровнем количество опыта который необходимо набрать чтобы
перейти на следующий увеличиваетс€ на 20%. »сточником опыта
€вл€етс€ схватка с монстрами. ≈сли уровень монстра совпадает с
уровнем персонажа или меньше или больше уровн€ персонажа на 1
веро€тность победы над монстром составл€ет 60%. ≈сли уровень
персонажа выше уровн€ монстра на 2, то веро€тность победы над
монстром Ц 100%. ќднако если уровень монстра ниже уровн€ персонажа
на 3 и более, то за победу над ним персонаж не получит опыта. —
повышением уровн€ монстра веро€тность его победить падает на 15%.
—оздать класс персонажа, предусмотреть пол€ уровн€, опыта который
необходимо набрать на уровне, текущего значени€ опыта на уровне и
числа убитых монстров, а также пол€ опыта за убийство одного
монстра. ƒобавить методы создани€ новой игры, и метода схватки с
монстром, в котором уровень монстра генерируетс€ случайным образом
и составл€ет +- 4 от уровн€ персонажа.

*/

#include "Game.h"

int main(void)
{
	int maxLvl;
	char symbol;
	Game curGame;
	for (;;)
	{
		std::cout << "Set max level :" << std::endl;
		std::cin >> maxLvl;
		curGame.game(maxLvl);
		std::cout << "Start new game?(Y/N)" << std::endl;
		std::cin >> symbol;
		if (toupper(symbol) == 'N')
		{
			break;
		}
	}
	return 0;
}